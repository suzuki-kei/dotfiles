#!/usr/bin/env bash

source "$(dirname -- "$0")/_internal"

declare -gr EXIT_STATUS_SUCCESS=0

declare -gr USAGE=`cat <<EOS | strip_heredoc
    NAME
        ${SCRIPT_NAME} - edit the value in mid-flow on command pipeline

    SYNOPSIS
        <command-1> | ${SCRIPT_NAME} | <command-2> | ...
        ${SCRIPT_NAME} [FILE]... | <command-1> | <command-2> | ...
        <command-1> | ${SCRIPT_NAME} [FILE]... | <command-2> | ...

    DESCRIPTION
        Edit the value in mid-flow on command pipeline.

        ${SCRIPT_NAME} works as follows:
            1. Creates a temporary file.
            2. If /dev/stdin is pipe, concatenates content to the temporary file.
            3. If FILE is specified, concatenates content to the temporary file.
            4. Opens the temporary file by \\$EDITOR. (default is vi)
            5. Outputs content of the temporary file to STDOUT.

    EXAMPLE
        seq 10 | ${SCRIPT_NAME} | wc -l

    EXIT STATUS
        ${EXIT_STATUS_SUCCESS} if successfly.
EOS`

function main
{
    parse_options "$@"
    set -- "${OPTION_ARGS[@]}"

    if ${OPTION_HELP}; then
        print_help
        exit ${EXIT_STATUS_SUCCESS}
    fi

    tap "$@"
    exit ${EXIT_STATUS_SUCCESS}
}

function print_help
{
    echo "${USAGE}"
}

function parse_options
{
    declare option

    while getopts 'h' option
    do
        case "${option}" in
            h)
                OPTION_HELP=true
                ;;
            *)
                print_help
                exit ${EXIT_STATUS_INVALID_ARGUMENT}
                ;;
        esac
    done

    shift $((OPTIND - 1))
    declare -agr OPTION_ARGS=("$@")
    declare -gr OPTION_HELP=${OPTION_HELP:-false}
}

function tap
{
    declare TEMP_FILE
    TEMP_FILE="$(mktemp -t ${SCRIPT_NAME}.XXXXXXXXXXXXXXXX)"
    trap "rm -f '${TEMP_FILE}'" ERR EXIT

    if [[ -p /dev/stdin ]]; then
        cat >> "${TEMP_FILE}"
    fi

    if [[ $# -gt 0 ]]; then
        cat "$@" >> "${TEMP_FILE}"
    fi

    vi -n "${TEMP_FILE}" < /dev/tty > /dev/tty
    cat "${TEMP_FILE}"
}

if [[ "$0" == "${BASH_SOURCE[0]}" ]]; then
    main "$@"
fi

