#!/bin/bash

set -eu

readonly EXIT_STATUS_SUCCESS=0

readonly EXIT_STATUS_INVALID_ARGUMENT=255

readonly USAGE=`cat <<EOS | sed -E 's/^ {4}//'
    NAME
        $(basename "$0") - open memo file.

    SYNOPSIS
        $(basename "$0") [-d MEMO_DIR] [-h] [-l] [-x] MEMO_TITLE

    PARAMETERS
        MEMO_TITLE
            Specify the memo title. If ommit, 'default' is used.

    OPTIONS
        -d MEMO_DIR
            Specify the base directory to store memo files.

        -l
            List the existing memo titles.

        -h
            Display the help message.

        -x
            Display the trace message.

    EXIT STATUS
        ${EXIT_STATUS_SUCCESS} if successfly.
        ${EXIT_STATUS_INVALID_ARGUMENT} if the argument is invalid.
EOS`

function trace
{
    if ${TRACE}; then
        echo "$@"
    fi
}

function main
{
    setup_settings "$@"
    ${EXECUTION_FUNCTION}
    exit ${EXIT_STATUS_SUCCESS}
}

function show_usage
{
    echo "${USAGE}"
}

function setup_settings
{
    parse_command_line_options "$@"

    # 処理のトレースログを出力する場合は true.
    TRACE=${TRACE:-false}
    trace "[var] TRACE=${TRACE}"

    # メモを保存するディレクトリ.
    MEMO_DIR="${MEMO_DIR:-${HOME}/.memo}"
    trace "[var] MEMO_DIR=${MEMO_DIR}"

    # メモのタイトル.
    MEMO_TITLE="${MEMO_TITLE:-default}"
    trace "[var] MEMO_TITLE=${MEMO_TITLE}"

    # 使い方を表示して終了する場合は true.
    SHOW_USAGE=${SHOW_USAGE:-false}
    trace "[var] SHOW_USAGE=${SHOW_USAGE}"

    # メモのタイトル一覧を表示して終了する場合は true.
    LIST_TITLES=${LIST_TITLES:-false}
    trace "[var] LIST_TITLES=${LIST_TITLES}"

    # 実行する関数.
    EXECUTION_FUNCTION=open_memo
    if ${LIST_TITLES}; then
        EXECUTION_FUNCTION=list_titles
    fi
    if ${SHOW_USAGE}; then
        EXECUTION_FUNCTION=show_usage
    fi
    trace "[var] EXECUTION_FUNCTION=${EXECUTION_FUNCTION}"

    # メモの編集に使用するエディタ.
    EDITOR=${EDITOR:-vi}
    trace "[var] EDITOR=${EDITOR}"
}

function parse_command_line_options
{
    while getopts 'd:hlx' OPTION
    do
        case "${OPTION}" in
            d)
                MEMO_DIR="${OPTARG}"
                ;;
            l)
                LIST_TITLES=true
                ;;
            h)
                SHOW_USAGE=true
                ;;
            x)
                TRACE=true
                ;;
            *)
                show_usage
                exit ${EXIT_STATUS_INVALID_ARGUMENT}
                ;;
        esac
    done

    shift $((OPTIND - 1))

    if [[ $# -ge 1 ]]; then
        MEMO_TITLE="$1"
        shift 1
    fi

    if [[ $# -ge 1 ]]; then
        echo "illegal option(s) -- $@" >&2
        exit ${EXIT_STATUS_INVALID_ARGUMENT}
    fi
}

function prepare_memo_dir
{
    if [[ ! -f "${MEMO_DIR}" ]]; then
        trace "[create] ${MEMO_DIR}"
        mkdir -p "${MEMO_DIR}"
    fi
}

function list_titles
{
    prepare_memo_dir
    ls -1 "${MEMO_DIR}" | sed -E 's/^memo\.|\.[0-9]{4}-[0-9]{2}-[0-9]{2}.txt$//g' | sort | uniq
}

function open_memo
{
    prepare_memo_dir

    local -r current_file_path="${MEMO_DIR}/memo.${MEMO_TITLE}.$(date '+%Y-%m-%d').txt"
    trace "[var] current_file_path=${current_file_path}"

    local -r previous_file_path="$(find "${MEMO_DIR}" -type f -name "memo.${MEMO_TITLE}.*.txt" | sort | tail -1)"
    trace "[var] previous_file_path=${previous_file_path}"

    if [ ! -f "${current_file_path}" -a -f "${previous_file_path}" ]; then
        cp -pi "${previous_file_path}" "${current_file_path}"
    fi

    "${EDITOR:-vi}" "${current_file_path}"
}

main "$@"

