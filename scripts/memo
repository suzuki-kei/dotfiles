#!/usr/bin/env bash

source "$(dirname -- "${BASH_SOURCE[0]}")/_internal"

declare -gr EXIT_STATUS_SUCCESS=0
declare -gr EXIT_STATUS_INVALID_ARGUMENT=1

declare -gr USAGE=`cat <<EOS | strip_heredoc
    NAME
        ${SCRIPT_NAME} - opens a memo file

    SYNOPSIS
        ${SCRIPT_NAME} [OPTION...] [MEMO_TITLE]

    DESCRIPTION
        Opens a memo file.

        A memo file is stored to MEMO_DIR separated by MEMO_TITLE and date.
        If MEMO_TITLE is ommit, 'default' is used.

    OPTIONS
        -d MEMO_DIR
            Specify the base directory to store memo files. (default is \\$HOME)

        -h
            Print the help message.

        -l
            List the existing memo titles.

    EXIT STATUS
        ${EXIT_STATUS_SUCCESS} if success.
        ${EXIT_STATUS_INVALID_ARGUMENT} if the argument is invalid.
EOS`

function main
{
    parse_options "$@"
    set -- "${OPTION_ARGS[@]}"

    if ${OPTION_HELP}; then
        print_help
        exit ${EXIT_STATUS_SUCCESS}
    fi

    if ${OPTION_LIST_TITLES}; then
        list_titles
        exit ${EXIT_STATUS_SUCCESS}
    fi

    open_memo
    exit ${EXIT_STATUS_SUCCESS}
}

function print_help
{
    echo "${USAGE}" | less -F
}

function parse_options
{
    declare option

    while getopts 'd:hlx' option
    do
        case "${option}" in
            d)
                OPTION_MEMO_DIR="${OPTARG}"
                ;;
            l)
                OPTION_LIST_TITLES=true
                ;;
            h)
                OPTION_HELP=true
                ;;
            *)
                print_help
                exit ${EXIT_STATUS_INVALID_ARGUMENT}
                ;;
        esac
    done

    shift $((OPTIND - 1))
    declare -agr OPTION_ARGS=("$@")
    declare -gr OPTION_MEMO_DIR="${OPTION_MEMO_DIR:-${HOME}/.memo}"
    declare -gr OPTION_HELP=${OPTION_HELP:-false}
    declare -gr OPTION_LIST_TITLES=${OPTION_LIST_TITLES:-false}
    declare -gr OPTION_TRACE=${OPTION_TRACE:-false}
    declare -gr OPTION_MEMO_TITLE="${1:-default}"
    declare -gr OPTION_EDITOR="${EDITOR:-vi}"

    if [[ $# -ge 1 ]]; then
        echo "illegal option(s) -- $@" >&2
        exit ${EXIT_STATUS_INVALID_ARGUMENT}
    fi
}

function prepare_memo_dir
{
    if [[ ! -d "${OPTION_MEMO_DIR}" ]]; then
        mkdir -p "${OPTION_MEMO_DIR}"
    fi
}

function list_titles
{
    prepare_memo_dir

    ls -1 "${OPTION_MEMO_DIR}" | sed -E 's/^memo\.|\.[0-9]{4}-[0-9]{2}-[0-9]{2}.txt$//g' | sort | uniq
}

function open_memo
{
    prepare_memo_dir

    declare current_file_path
    current_file_path="${OPTION_MEMO_DIR}/memo.${OPTION_MEMO_TITLE}.$(date '+%Y-%m-%d').txt"

    declare previous_file_path
    previous_file_path="$(find "${OPTION_MEMO_DIR}" -type f -name "memo.${OPTION_MEMO_TITLE}.*.txt" | sort | tail -1)"

    if [ ! -f "${current_file_path}" -a -f "${previous_file_path}" ]; then
        cp -pi "${previous_file_path}" "${current_file_path}"
        chmod 444 "${previous_file_path}"
    fi

    "${OPTION_EDITOR}" "${current_file_path}"
}

if [[ "$0" == "${BASH_SOURCE[0]}" ]]; then
    main "$@"
fi

