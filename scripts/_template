#!/usr/bin/env bash

source "$(dirname -- "$0")/_internal"

declare -gr EXIT_STATUS_SUCCESS=0
declare -gr EXIT_STATUS_INVALID_ARGUMENT=1

declare -gr USAGE=`cat <<EOS | strip_heredoc
    NAME
        ${SCRIPT_NAME} - print hello message

    SYNOPSIS
        ${SCRIPT_NAME} [OPTION...] [NAME]

    DESCRIPTION
        Print hello message.

        NAME is ...

    OPTIONS
        -h
            Print the help message.

        -v
            Print message verbosely.

    EXIT STATUS
        ${EXIT_STATUS_SUCCESS} if successfly.
        ${EXIT_STATUS_INVALID_ARGUMENT} if the argument is invalid.
EOS`

function main
{
    parse_options "$@"
    set -- "${OPTION_ARGS[@]}"

    if ${OPTION_HELP}; then
        print_help
        exit ${EXIT_STATUS_SUCCESS}
    fi

    if ${OPTION_VERBOSE}; then
        echo "\$# = $#"
        for ((i = 1; i <= $#; i++)); do
            echo "\$${i} = ${!i}"
        done

        echo "\$OPTION_HELP=${OPTION_HELP}"
        echo "\$OPTION_VERBOSE=${OPTION_VERBOSE}"
    fi

    print_hello "$@"
    exit ${EXIT_STATUS_SUCCESS}
}

function print_help
{
    echo "${USAGE}"
}

function parse_options
{
    while getopts 'hv' OPTION
    do
        case "${OPTION}" in
            h)
                OPTION_HELP=true
                ;;
            v)
                OPTION_VERBOSE=true
                ;;
            *)
                print_help
                exit ${EXIT_STATUS_INVALID_ARGUMENT}
                ;;
        esac
    done

    shift $((OPTIND - 1))
    declare -agr OPTION_ARGS=("$@")
    declare -gr OPTION_HELP=${OPTION_HELP:-false}
    declare -gr OPTION_VERBOSE=${OPTION_VERBOSE:-false}

#    if [[ $# -gt 1 ]]; then
#        echo "illegal option(s) -- $@" >&2
#        exit ${EXIT_STATUS_INVALID_ARGUMENT}
#    fi
}

function print_hello
{
    echo 'hello'
}

if [[ "$0" == "${BASH_SOURCE[0]}" ]]; then
    main "$@"
fi

