#
# 共通する定数や関数を定義します.
#
# このファイルは source で読み込まれることを想定しています.
#

set -eu -o pipefail

# コマンド置換したときに errexit の値を継承する.
shopt -s inherit_errexit

# このファイルを source で読み込んだファイルが置かれているディレクトリの絶対パス.
declare SCRIPT_DIR
SCRIPT_DIR="$(cd -- "$(dirname -- '$0')" && pwd)"
declare -gr SCRIPT_DIR

# このファイルを source で読み込んだファイルの名前.
declare SCRIPT_NAME
SCRIPT_NAME="$(basename -- "$0")"
declare -gr SCRIPT_NAME

# このファイルが置かれているディレクトリの絶対パス.
declare SOURCE_DIR
SOURCE_DIR="$(cd -- "$(dirname -- '${BASH_SOURCE[0]}')" && pwd)"
declare -gr SOURCE_DIR

# このファイルの名前.
declare SOURCE_NAME
SOURCE_NAME="$(basename -- "${BASH_SOURCE[0]}")"
declare -gr SOURCE_NAME

#
# ヒアドキュメントの不要なインデントを削除します.
#
# Input:
#     標準入力から処理対象のヒアドキュメントを読み取ります.
#
# Output:
#     処理結果を標準出力に出力します.
#
# Returns:
#     処理に成功した場合は 0 を返します.
#     処理に失敗した場合の戻り値は未定義です.
#
function strip_heredoc
{
    declare text
    IFS= read -rd '' text < <(cat) || true

    declare prefix
    prefix="$(echo -n "${text}" | sed -r -e '/^$/d' -e 's/^( *).*$/\1/' | sort | head -1)"

    echo -n "${text}" | sed "s/^${prefix}//"
}

