#!/usr/bin/env bash

set -eu -o pipefail

declare -gr NAME="$(basename "${BASH_SOURCE}")"
declare -gr BASE_DIR="$(cd "$(dirname "${BASH_SOURCE}")" && pwd)"
source "${BASE_DIR}/_internal"

declare -gr DEFAULT_WORKSPACE_DIR=${GITHUB_CLONE_WORKSPACE_DIR:-~/workspace/github.com}

declare -gr EXIT_STATUS_SUCCESS=0
declare -gr EXIT_STATUS_INVALID_ARGUMENT=1

declare -gr USAGE=`cat <<EOS | strip_heredoc
    NAME
        ${NAME} - clone git repository from GitHub

    SYNOPSIS
        ${NAME} URL

    DESCRIPTION
        Clone git repository from GitHub.

        URL
            The git repository url to clone.

    ENVIRONMENT VARIABLES
        GITHUB_CLONE_WORKSPACE_DIR
            The workspace directory if -d option is omitted. (default "~/workspace/github.com")

    EXIT STATUS
        ${EXIT_STATUS_SUCCESS} if successfly.
        ${EXIT_STATUS_INVALID_ARGUMENT} if the argument is invalid.
EOS`

function main
{
    parse_options "$@"
    set -- "${OPTION_ARGS[@]}"

    if ${OPTION_HELP}; then
        print_help
        exit ${EXIT_STATUS_SUCCESS}
    fi

    git_clone "${OPTION_WORKSPACE_DIR}" "$1"
    exit ${EXIT_STATUS_SUCCESS}
}

function print_help
{
    echo "${USAGE}"
}

function parse_options
{
    while getopts 'd:h' OPTION
    do
        case "${OPTION}" in
            d)
                OPTION_WORKSPACE_DIR="${OPTARG}"
                ;;
            h)
                OPTION_HELP=true
                ;;
            *)
                print_help
                exit ${EXIT_STATUS_INVALID_ARGUMENT}
                ;;
        esac
    done

    shift $((OPTIND - 1))
    declare -agr OPTION_ARGS=("$@")
    declare -gr OPTION_HELP=${OPTION_HELP:-false}
    declare -gr OPTION_WORKSPACE_DIR="${OPTION_WORKSPACE_DIR:-${DEFAULT_WORKSPACE_DIR}}"

    if [[ $# -gt 1 ]]; then
        echo "illegal option(s) -- $@" >&2
        exit ${EXIT_STATUS_INVALID_ARGUMENT}
    fi
}

function git_clone
{
    eval "$(make_git_clone_command "$1" "$2")"
}

function make_git_clone_command
{
    declare -r workspace_dir="$1"
    declare -r repository_url="$2"

    if [[ ${repository_url} =~ ^git@github.com:(.+)/(.+).git$ ]]; then
        echo "git clone '${BASH_REMATCH[0]}' '${workspace_dir}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}'"
    elif [[ ${repository_url} =~ ^https://github.com/(.+)/(.+).git$ ]]; then
        echo "git clone '${BASH_REMATCH[0]}' '${workspace_dir}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}'"
    else
        echo "illegal option(s) -- $@" >&2
        exit ${EXIT_STATUS_INVALID_ARGUMENT}
    fi
}

if [[ "$0" == "${BASH_SOURCE}" ]]; then
    main "$@"
fi

