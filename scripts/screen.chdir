#!/usr/bin/env bash

set -eu -o pipefail

declare -gr NAME="$(basename "${BASH_SOURCE[0]}")"
declare -gr BASE_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
source "${BASE_DIR}/_internal"

declare -gr EXIT_STATUS_SUCCESS=0
declare -gr EXIT_STATUS_INVALID_ARGUMENT=1
declare -gr EXIT_STATUS_NOT_IN_SCREEN=2

declare -gr USAGE=`cat <<EOS | strip_heredoc
    NAME
        ${NAME} - changes the current directory of screen.

    SYNOPSIS
        ${NAME} [OPTION...] [TARGET]

    DESCRIPTION
        Changes the current directory of attached screen session.
        TARGET is new current directory (default is pwd).

    OPTIONS
        -h
            Print the help message.

        -v
            Print message verbosely.

    EXIT STATUS
        ${EXIT_STATUS_SUCCESS} if successfly.
        ${EXIT_STATUS_INVALID_ARGUMENT} if the argument is invalid.
        ${EXIT_STATUS_NOT_IN_SCREEN} if there is no attached screen.

    EXAMPLE
        Change screen's current directory to bash's current directory.
        Maybe this form is most used.

            ${NAME}

        You can specify new current directory path.
        Maybe this form is rarely used.

            ${NAME} /tmp
EOS`

function main
{
    parse_options "$@"
    set -- "${OPTION_ARGS[@]}"

    if ${OPTION_HELP}; then
        print_help
        exit ${EXIT_STATUS_SUCCESS}
    fi

    screen_chdir "${1:-$(pwd)}"
    exit ${EXIT_STATUS_SUCCESS}
}

function print_help
{
    echo "${USAGE}"
}

function parse_options
{
    while getopts 'hv' OPTION
    do
        case "${OPTION}" in
            h)
                OPTION_HELP=true
                ;;
            v)
                OPTION_VERBOSE=true
                ;;
            *)
                print_help
                exit ${EXIT_STATUS_INVALID_ARGUMENT}
                ;;
        esac
    done

    shift $((OPTIND - 1))
    declare -agr OPTION_ARGS=("$@")
    declare -gr OPTION_HELP=${OPTION_HELP:-false}
    declare -gr OPTION_VERBOSE=${OPTION_VERBOSE:-false}

    if [[ $# -gt 1 ]]; then
        echo "illegal option(s) -- $@" >&2
        exit ${EXIT_STATUS_INVALID_ARGUMENT}
    fi
}

function screen_chdir
{
    if [[ "${STY:-}" == '' ]]; then
        echo "Not in screen." >&2
        exit ${EXIT_STATUS_NOT_IN_SCREEN}
    fi

    declare -r target="$1"
    screen -S "${STY}" -X chdir "${target}"

    if ${OPTION_VERBOSE:-false}; then
        echo "change to ${target}"
    fi
}

if [[ "$0" == "${BASH_SOURCE[0]}" ]]; then
    main "$@"
fi

