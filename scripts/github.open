#!/usr/bin/env bash

source "$(dirname -- "${BASH_SOURCE[0]}")/_internal"

declare -gr EXIT_STATUS_SUCCESS=0
declare -gr EXIT_STATUS_INVALID_ARGUMENT=1

declare -gr USAGE=`cat <<EOS | strip_heredoc
    NAME
        ${SCRIPT_NAME} - open git remote in browser

    SYNOPSIS
        ${SCRIPT_NAME} [DIR]

    DESCRIPTION
        Open git remote in browser.

        DIR
            The directory path of cloned git repository from GitHub.

    ENVIRONMENT VARIABLES
        GITHUB_OPEN_COMMAND
            The command used to open url. (default is "open")

    EXIT STATUS
        ${EXIT_STATUS_SUCCESS} if successfly.
        ${EXIT_STATUS_INVALID_ARGUMENT} if the argument is invalid.
EOS`

function main
{
    parse_options "$@"
    set -- "${OPTION_ARGS[@]}"

    if ${OPTION_HELP}; then
        print_help
        exit ${EXIT_STATUS_SUCCESS}
    fi

    open_git_remote_in_browser "$@"
    exit ${EXIT_STATUS_SUCCESS}
}

function print_help
{
    echo "${USAGE}"
}

function parse_options
{
    declare option

    while getopts 'd:h' option
    do
        case "${option}" in
            h)
                OPTION_HELP=true
                ;;
            *)
                print_help
                exit ${EXIT_STATUS_INVALID_ARGUMENT}
                ;;
        esac
    done

    shift $((OPTIND - 1))
    declare -agr OPTION_ARGS=("$@")
    declare -gr OPTION_HELP=${OPTION_HELP:-false}

    if [[ $# -gt 1 ]]; then
        echo "illegal option(s) -- $@" >&2
        exit ${EXIT_STATUS_INVALID_ARGUMENT}
    fi
}

function open_git_remote_in_browser
{
    declare repository_dir
    repository_dir="${1:-$(pwd)}"

    declare command
    command="$(make_open_command "${repository_dir}")"

    eval "${open_command}"
}

function make_open_command
{
    declare repository_dir
    repository_dir="${1:-$(pwd)}"

    declare git_remote_url
    git_remote_url="$(to_git_remote_url_from_repository_dir "${repository_dir}")"

    declare github_url
    github_url="$(to_github_url_from_git_remote_url "${git_remote_url}")"

    declare open_command
    open_command="$(to_open_command_from_github_url "${github_url}")"

    echo "${open_command}"
}

function to_git_remote_url_from_repository_dir
{
    declare -r repository_dir="$1"
    git -C "${repository_dir}" remote get-url origin
}

function to_github_url_from_git_remote_url
{
    declare -r git_remote_url="$1"

    if [[ ${git_remote_url} =~ ^git@github.com:(.+)/(.+).git$ ]]; then
        echo "https://github.com/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}"
    elif [[ ${git_remote_url} =~ ^https://github.com/(.+)/(.+).git$ ]]; then
        echo "https://github.com/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}"
    else
        echo "illegal option(s) -- $@" >&2
        exit ${EXIT_STATUS_INVALID_ARGUMENT}
    fi
}

function to_open_command_from_github_url
{
    declare -r github_url="$1"
    echo "${GITHUB_OPEN_COMMAND:-open} '${github_url}'"
}

if [[ "$0" == "${BASH_SOURCE[0]}" ]]; then
    main "$@"
fi

