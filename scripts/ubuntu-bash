#!/bin/bash

set -eu

declare -r ROOT_DIR="$(cd "$(dirname "$0")/.." && pwd)"
declare -r SCRIPTS_DIR="${ROOT_DIR}/scripts"
source "${SCRIPTS_DIR}/_internal.sh"

declare -r BASE_NAME="$(basename "$0")"
declare -r DOCKERFILE_PATH="$(cd "$(dirname "$0")/../dockerfiles/${BASE_NAME}" && pwd)/Dockerfile"

readonly EXIT_STATUS_SUCCESS=0
readonly EXIT_STATUS_INVALID_ARGUMENT=255

readonly USAGE=`cat <<EOS | _strip_heredoc
    NAME
        $(basename "$0") - build and run the ubuntu-bash docker container.

    DESCRIPTION
        build and run the ubuntu-bash docker container.

    SYNOPSIS
        $(basename "$0") OPTIONS
        $(basename "$0") SUBCOMMAND

    OPTIONS
        -h, --help
            Print help message.

    SUBCOMMANDS
        help
            Print help message.

        build
            Build docker image.

        run
            Run docker image.

    EXIT STATUS
        ${EXIT_STATUS_SUCCESS} if successfly.
        ${EXIT_STATUS_INVALID_ARGUMENT} if the argument is invalid.
EOS`

function main
{
    for argument in "$@"
    do
        case "${argument}" in
            help | -h | --help)
                subcommand=help
                ;;
            build)
                subcommand=build
                ;;
            run)
                subcommand=run
                ;;
            *)
                echo "illegal option(s) -- $@" >&2
                exit ${EXIT_STATUS_INVALID_ARGUMENT}
                ;;
        esac
    done

    subcommand_${subcommand:-run}
    exit ${EXIT_STATUS_SUCCESS}
}

function subcommand_help
{
    echo "${USAGE}"
}

function subcommand_build
{
    export DOCKER_SCAN_SUGGEST=false
    docker build -t "${BASE_NAME}" - < "${DOCKERFILE_PATH}"
}

function subcommand_run
{
    docker run -it --rm "${BASE_NAME}"
}

main "$@"

