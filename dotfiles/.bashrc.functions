
# クリップボードや履歴, 不要ファイルを削除する.
function prune
{
    history -cw

    if which pbcopy > /dev/null; then
        echo -n | pbcopy
    fi

    if [[ "${STY:-}" != '' ]]; then
        screen.clear -p
    fi

    # ユーザ作成ディレクトリから .DS_Store を全て削除する.
    # ユーザ作成ディレクトリは小文字始まりであることを前提とする.
    find ~/[a-z]* -type f -name .DS_Store | xargs -I{} rm -v -- '{}'

    rm -vrf ~/.bash_history
    rm -vrf ~/.gforth-history
    rm -vrf ~/.ghc/ghci_history
    rm -vrf ~/.gosh_history
    rm -vrf ~/.irb_history
    rm -vrf ~/.lesshst
    rm -vrf ~/.node_repl_history
    rm -vrf ~/.python_history
    rm -vrf ~/.tig_history
    rm -vrf ~/.vim/.netrwhist
}

# date のデフォルトフォーマットを変更する.
function date_with_default_format
{
    declare -r default_format='+%F %T %Z'
    declare format_specified=false
    declare option

    for option in "$@"
    do
        if [[ "${option}" == +* ]]; then
            format_specified=true
        fi
    done

    if ! ${format_specified}; then
        set -- "$@" "${default_format}"
    fi

    date "$@"
}
alias date=date_with_default_format

# screen 内で screen を起動することを防止する.
# screen 内で screen コマンドを実行した場合は screen.chdir に置き換える.
function screen_with_double_execution_prevention
{
    if [[ $# == 0 && "${TERM}" == 'screen' ]]; then
        screen.chdir
    else
        \screen "$@"
    fi
}
alias screen=screen_with_double_execution_prevention

# g を実行後に exit する.
# screen のウィンドウを使い捨てにして Chrome を起動するためのショートカット.
function g.exit
{
    g "$@"
    exit
}

# mkdir -p でディレクトリを作成し, cd でその中に移動する.
function mkcd
{
    if [[ $# == 0 ]]; then
        echo 'directory must be specified.' >&2
        return 1
    fi

    # ディレクトリが複数指定されると cd する先を特定できないのでエラーとする.
    if [[ $# > 1 ]]; then
        echo 'specify only one directory.' >&2
        return 2
    fi

    mkdir -p "$1" && cd "$_"
}

function github.list
{
    declare -r workspace_dir=~/workspace/github.com
    find "${workspace_dir}" -mindepth 2 -maxdepth 2 -type d -printf '%P\n' | sort
}

function github.cd
{
    declare -r workspace_dir=~/workspace/github.com/suzuki-kei

    if [[ $# == 0 ]]; then
        cd -- "${workspace_dir}"
    else
        cd -- "${workspace_dir}/$1"
    fi
}

function _github.cd.bash_complete
{
    declare -r workspace_dir=~/workspace/github.com/suzuki-kei

    declare -r word="${COMP_WORDS[${COMP_CWORD}]}"

    if [[ ${COMP_CWORD} == 1 ]]; then
        declare dirnames
        dirnames="$(find "${workspace_dir}" -mindepth 1 -maxdepth 1 -type d -printf '%P\n' | sort)"
        (( $? == 0 )) || return

        COMPREPLY=($(compgen -W "${dirnames}" -- "${word}"))
    fi
}

complete -F _github.cd.bash_complete github.cd

