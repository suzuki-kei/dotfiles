#!/usr/bin/env bash

source "$(dirname -- "${BASH_SOURCE[0]}")/../_internal"

declare -gr EXIT_STATUS_SUCCESS=0
declare -gr EXIT_STATUS_INVALID_ARGUMENT=1
declare -gr EXIT_STATUS_NOT_IN_SCREEN=2

declare -gr USAGE=`cat <<EOS | strip_heredoc
    NAME
        ${SCRIPT_NAME} - copy text to attached screen's paste buffer

    SYNOPSIS
        ${SCRIPT_NAME} [OPTION...] [FILE...]

    DESCRIPTION
        Copy text to attached screen's paste buffer.

        Read text from /dev/stdin if /dev/stdin is pipe or file.
        Read text from FILE if /dev/stdin is neither pipe nor file.

    OPTIONS
        -h
            Print the help message.

    EXIT STATUS
        ${EXIT_STATUS_SUCCESS} if success.
        ${EXIT_STATUS_NOT_IN_SCREEN} if there is no attached screen.
        ${EXIT_STATUS_INVALID_ARGUMENT} if the argument is invalid.
EOS`

function main
{
    parse_options "$@"
    set -- "${OPTION_ARGS[@]}"

    if ${OPTION_HELP}; then
        print_help
        exit ${EXIT_STATUS_SUCCESS}
    fi

    screen_readbuf "$@"
    exit ${EXIT_STATUS_SUCCESS}
}

function print_help
{
    echo "${USAGE}" | less -F
}

function parse_options
{
    declare option

    while getopts 'hv' option
    do
        case "${option}" in
            h)
                OPTION_HELP=true
                ;;
            *)
                print_help
                exit ${EXIT_STATUS_INVALID_ARGUMENT}
                ;;
        esac
    done

    shift $((OPTIND - 1))
    declare -agr OPTION_ARGS=("$@")
    declare -gr OPTION_HELP=${OPTION_HELP:-false}
    declare -gr OPTION_VERBOSE=${OPTION_VERBOSE:-false}

    if [[ $# -gt 1 ]]; then
        echo "illegal option(s) -- $@" >&2
        exit ${EXIT_STATUS_INVALID_ARGUMENT}
    fi
}

function screen_readbuf
{
    if [[ "${STY:-}" == '' ]]; then
        echo 'Not in screen.' >&2
        exit ${EXIT_STATUS_NOT_IN_SCREEN}
    fi

    declare -r exchange_file_path='/tmp/screen-exchange'

    if [[ -p /dev/stdin ]] || [[ -f /dev/stdin ]]; then
        cat > "${exchange_file_path}"
    elif [[ $# == 0 ]]; then
        echo 'File not specified.' >&2
        exit ${EXIT_STATUS_INVALID_ARGUMENT}
    else
        cat "$@" > "${exchange_file_path}"
    fi

    screen -S "${STY}" -X readbuf "${exchange_file_path}"
    rm "${exchange_file_path}"
}

if [[ "$0" == "${BASH_SOURCE[0]}" ]]; then
    main "$@"
fi

